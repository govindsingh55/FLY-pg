/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
    customers: CustomerAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    properties: Property;
    rooms: Room;
    customers: Customer;
    'visit-bookings': VisitBooking;
    bookings: Booking;
    payments: Payment;
    'food-menu': FoodMenu;
    'support-tickets': SupportTicket;
    'support-media': SupportMedia;
    notifications: Notification;
    amenities: Amenity;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    properties: PropertiesSelect<false> | PropertiesSelect<true>;
    rooms: RoomsSelect<false> | RoomsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    'visit-bookings': VisitBookingsSelect<false> | VisitBookingsSelect<true>;
    bookings: BookingsSelect<false> | BookingsSelect<true>;
    payments: PaymentsSelect<false> | PaymentsSelect<true>;
    'food-menu': FoodMenuSelect<false> | FoodMenuSelect<true>;
    'support-tickets': SupportTicketsSelect<false> | SupportTicketsSelect<true>;
    'support-media': SupportMediaSelect<false> | SupportMediaSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    amenities: AmenitiesSelect<false> | AmenitiesSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Customer & {
        collection: 'customers';
      });
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  role: 'admin' | 'manager' | 'chef' | 'cleaning' | 'security';
  /**
   * Select the properties this user is associated with.
   */
  property?: (string | Property)[] | null;
  status?: ('active' | 'inactive') | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties".
 */
export interface Property {
  id: string;
  name: string;
  /**
   * Auto-generated from name, editable.
   */
  slug: string;
  images?:
    | {
        image?: (string | null) | Media;
        isCover?: boolean | null;
        id?: string | null;
      }[]
    | null;
  preview?: boolean | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  address: {
    /**
     * The full address of the property
     */
    address: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * Useful for searching and displaying on maps
     */
    location: {
      state: string;
      city: string;
      sector?: string | null;
      /**
       * @minItems 2
       * @maxItems 2
       */
      coordinates: [number, number];
      mapLink: string;
    };
  };
  propertyType: 'PG' | 'Hostel' | 'Apartment';
  genderType: 'Unisex' | 'Male' | 'Female';
  status?: ('active' | 'inactive') | null;
  featured?: boolean | null;
  /**
   * Select amenities available at this property
   */
  amenities?: (string | Amenity)[] | null;
  /**
   * Configure food menu and pricing for this property
   */
  foodMenu?: {
    /**
     * Select the food menu for this property
     */
    menu?: (string | null) | FoodMenu;
    /**
     * Monthly food charge per person for this property (city-specific pricing)
     */
    price?: number | null;
  };
  nearbyLocations?:
    | {
        name?: string | null;
        distance?: string | null;
        id?: string | null;
      }[]
    | null;
  manager: string | User;
  /**
   * Configure security deposit requirements for this property
   */
  securityDepositConfig?: {
    /**
     * Enable security deposit requirement for this property
     */
    enabled?: boolean | null;
    /**
     * Default security deposit amount (can be overridden per booking)
     */
    amount?: number | null;
    /**
     * How to calculate security deposit
     */
    type?: ('fixed' | 'multiplier') | null;
    /**
     * Number of months rent as security deposit (if type is multiplier)
     */
    multiplier?: number | null;
    /**
     * Is the security deposit refundable?
     */
    refundable?: boolean | null;
    /**
     * Conditions for security deposit refund
     */
    refundConditions?: string | null;
  };
  rooms?: (string | Room)[] | null;
  roomRentPriceRange?: {
    min?: number | null;
    max?: number | null;
  };
  meta?: {
    /**
     * SEO Title (Open Graph)
     */
    title?: string | null;
    /**
     * SEO Description (Open Graph)
     */
    description?: string | null;
    /**
     * SEO Image (Open Graph)
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  deletedAt?: string | null;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Manage property amenities and features
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "amenities".
 */
export interface Amenity {
  id: string;
  /**
   * Name of the amenity (e.g., WiFi, Laundry, Gym)
   */
  name: string;
  /**
   * Detailed description of the amenity
   */
  description?: string | null;
  /**
   * Icon/logo for the amenity (recommended: SVG or PNG)
   */
  logo?: (string | null) | Media;
  /**
   * Featured image for the amenity
   */
  image?: (string | null) | Media;
  /**
   * Current status of the amenity
   */
  status: 'active' | 'draft' | 'deleted';
  /**
   * Lucide React icon name for fallback (e.g., Wifi, Dumbbell)
   */
  iconName?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "food-menu".
 */
export interface FoodMenu {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rooms".
 */
export interface Room {
  id: string;
  name: string;
  roomType: 'single' | 'two_sharing' | 'three_sharing';
  rent: number;
  /**
   * Select amenities available in this room
   */
  amenities?: (string | Amenity)[] | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  status?: ('active' | 'inactive') | null;
  available?: boolean | null;
  images?:
    | {
        image?: (string | null) | Media;
        isCover?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage customer accounts and profiles
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: string;
  name: string;
  phone?: string | null;
  status?: ('active' | 'inactive') | null;
  /**
   * Profile picture for the customer
   */
  profilePicture?: (string | null) | Media;
  /**
   * Customer date of birth
   */
  dateOfBirth?: string | null;
  gender?: ('male' | 'female' | 'other' | 'prefer-not-to-say') | null;
  /**
   * Customer occupation or job title
   */
  occupation?: string | null;
  /**
   * Company or institution name
   */
  company?: string | null;
  address?: {
    /**
     * Street address
     */
    street?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * State or province
     */
    state?: string | null;
    /**
     * Postal/ZIP code
     */
    pincode?: string | null;
    /**
     * Country
     */
    country?: string | null;
  };
  emergencyContact?: {
    /**
     * Emergency contact name
     */
    name?: string | null;
    /**
     * Emergency contact phone number
     */
    phone?: string | null;
    /**
     * Relationship to customer
     */
    relationship?: string | null;
  };
  notificationPreferences?: {
    /**
     * Receive email notifications
     */
    emailNotifications?: boolean | null;
    /**
     * Receive SMS notifications
     */
    smsNotifications?: boolean | null;
    /**
     * Receive push notifications
     */
    pushNotifications?: boolean | null;
    /**
     * Receive booking reminders
     */
    bookingReminders?: boolean | null;
    /**
     * Receive payment reminders
     */
    paymentReminders?: boolean | null;
    /**
     * Receive maintenance updates
     */
    maintenanceUpdates?: boolean | null;
  };
  /**
   * Enable automatic rent payments
   */
  autoPayEnabled?: boolean | null;
  /**
   * Payment method ID for auto-pay
   */
  autoPayPaymentMethod?: string | null;
  /**
   * Day of month for auto-pay (1-28)
   */
  autoPayDay?: number | null;
  /**
   * Maximum amount for auto-pay
   */
  autoPayMaxAmount?: number | null;
  /**
   * Receive notifications for auto-pay
   */
  autoPayNotifications?: boolean | null;
  /**
   * Last time auto-pay settings were updated
   */
  autoPayLastUpdated?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visit-bookings".
 */
export interface VisitBooking {
  id: string;
  customer?: (string | null) | Customer;
  /**
   * Guest user information (click to expand)
   */
  guestUser?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  property: string | Property;
  visitDate: string;
  status?: ('pending' | 'confirmed' | 'cancelled') | null;
  notes?: string | null;
  statusHistory?:
    | {
        status: 'pending' | 'confirmed' | 'cancelled';
        changedBy:
          | {
              relationTo: 'users';
              value: string | User;
            }
          | {
              relationTo: 'customers';
              value: string | Customer;
            };
        changedAt: string;
        note?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: string;
  customer: string | Customer;
  property: string | Property;
  room: string | Room;
  foodIncluded?: boolean | null;
  price: number;
  /**
   * Security deposit details for this booking
   */
  securityDeposit?: {
    /**
     * Security deposit amount (0 if not required)
     */
    amount?: number | null;
    status?: ('not-required' | 'pending' | 'paid' | 'refunded' | 'partially-refunded' | 'forfeited') | null;
    /**
     * Date when security deposit was paid
     */
    paidDate?: string | null;
    /**
     * Date when security deposit was refunded
     */
    refundedDate?: string | null;
    /**
     * Amount refunded (if different from original amount)
     */
    refundAmount?: number | null;
    /**
     * Additional notes about security deposit
     */
    notes?: string | null;
  };
  status?: ('pending' | 'confirmed' | 'cancelled' | 'completed' | 'extended') | null;
  roomSnapshot?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  startDate: string;
  endDate: string;
  periodInMonths?: number | null;
  checkInDate?: string | null;
  checkOutDate?: string | null;
  cancellationReason?: string | null;
  cancelledAt?: string | null;
  cancelledBy?: (string | null) | Customer;
  extensionRequests?:
    | {
        requestedEndDate: string;
        reason: string;
        status?: ('pending' | 'approved' | 'rejected') | null;
        requestedAt?: string | null;
        respondedAt?: string | null;
        responseNote?: string | null;
        id?: string | null;
      }[]
    | null;
  maintenanceRequests?:
    | {
        title: string;
        description: string;
        priority?: ('low' | 'medium' | 'high' | 'urgent') | null;
        status?: ('open' | 'in-progress' | 'resolved' | 'closed') | null;
        requestedAt?: string | null;
        resolvedAt?: string | null;
        resolutionNote?: string | null;
        id?: string | null;
      }[]
    | null;
  bookingDocuments?:
    | {
        document: string | Media;
        type: 'agreement' | 'id-proof' | 'address-proof' | 'other';
        description?: string | null;
        uploadedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  rating?: number | null;
  review?: string | null;
  reviewedAt?: string | null;
  specialRequests?: string | null;
  notes?: string | null;
  totalNights?: number | null;
  averageDailyRate?: number | null;
  lastModified?: string | null;
  modificationCount?: number | null;
  customerSatisfactionScore?: number | null;
  bookingSource?: ('website' | 'mobile-app' | 'phone' | 'walk-in' | 'referral') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments".
 */
export interface Payment {
  id: string;
  amount: number;
  /**
   * Current status of the payment
   */
  status:
    | 'initiated'
    | 'pending'
    | 'processing'
    | 'completed'
    | 'failed'
    | 'cancelled'
    | 'refunded'
    | 'partially-refunded';
  customer: string | Customer;
  payfor: string | Booking;
  paymentForMonthAndYear: string;
  paymentDate?: string | null;
  /**
   * Snapshot of booking data at time of payment (click to expand)
   */
  bookingSnapshot?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  dueDate: string;
  /**
   * Last raw response from PhonePe (click to expand)
   */
  phonepeLastRaw?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  gateway?: string | null;
  merchantOrderId?: string | null;
  phonepeLastCode?: string | null;
  phonepeLastState?: string | null;
  paymentMethod?: ('credit-card' | 'debit-card' | 'upi' | 'net-banking' | 'wallet' | 'cash') | null;
  /**
   * Enable automatic payment for future months
   */
  autoPayEnabled?: boolean | null;
  /**
   * Late fees applied to this payment
   */
  lateFees?: number | null;
  /**
   * Utility charges included in this payment
   */
  utilityCharges?: number | null;
  /**
   * Payment receipt document
   */
  paymentReceipt?: (string | null) | Media;
  paymentMethodDetails?: {
    /**
     * Last 4 digits of card (if applicable)
     */
    cardLast4?: string | null;
    /**
     * Type of card (Visa, MasterCard, etc.)
     */
    cardType?: string | null;
    /**
     * UPI ID used for payment
     */
    upiId?: string | null;
    /**
     * Bank name for net banking
     */
    bankName?: string | null;
  };
  reminderSettings?: {
    /**
     * Send payment reminders
     */
    sendReminders?: boolean | null;
    /**
     * Days before due date to send reminder
     */
    reminderDays?: number | null;
    /**
     * When the last reminder was sent
     */
    reminderSentAt?: string | null;
  };
  /**
   * Additional notes about this payment
   */
  notes?: string | null;
  /**
   * Admin user who processed this payment
   */
  processedBy?: (string | null) | User;
  /**
   * Time taken to process payment (in seconds)
   */
  processingTime?: number | null;
  /**
   * Number of times payment was retried
   */
  retryCount?: number | null;
  /**
   * Last time payment was retried
   */
  lastRetryAt?: string | null;
  /**
   * Customer satisfaction rating for payment experience
   */
  customerSatisfactionScore?: number | null;
  /**
   * Source through which payment was initiated
   */
  paymentSource?: ('web-dashboard' | 'mobile-app' | 'admin-panel' | 'auto-pay' | 'phone-call' | 'walk-in') | null;
  deviceInfo?: {
    /**
     * User agent string
     */
    userAgent?: string | null;
    /**
     * IP address of payment initiator
     */
    ipAddress?: string | null;
    /**
     * Type of device used for payment
     */
    deviceType?: ('desktop' | 'mobile' | 'tablet' | 'unknown') | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-tickets".
 */
export interface SupportTicket {
  id: string;
  customer: string | Customer;
  property?: (string | null) | Property;
  staff?: (string | null) | User;
  type: 'manager' | 'chef' | 'cleaning' | 'security';
  description: string;
  status: 'open' | 'in_progress' | 'resolved' | 'closed';
  progress?:
    | {
        status: 'open' | 'in_progress' | 'resolved' | 'closed';
        updatedBy: string | User;
        note?: string | null;
        updatedAt: string;
        id?: string | null;
      }[]
    | null;
  conversation?:
    | {
        sender: string | User;
        message?: string | null;
        image?: (string | null) | SupportMedia;
        createdAt: string;
        id?: string | null;
      }[]
    | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-media".
 */
export interface SupportMedia {
  id: string;
  alt?: string | null;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Manage customer notifications and alerts
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  /**
   * The customer who will receive this notification
   */
  customer: string | Customer;
  /**
   * Notification title or subject
   */
  title: string;
  /**
   * Notification message content
   */
  message: string;
  /**
   * Type of notification
   */
  type: 'booking' | 'payment' | 'support' | 'general' | 'maintenance' | 'security' | 'food' | 'cleaning';
  /**
   * Category for filtering notifications
   */
  category?:
    | ('all' | 'booking' | 'payment' | 'support' | 'system' | 'maintenance' | 'security' | 'food' | 'cleaning')
    | null;
  /**
   * Priority level of the notification
   */
  priority?: ('low' | 'medium' | 'high' | 'urgent') | null;
  /**
   * Whether the customer has read this notification
   */
  isRead?: boolean | null;
  /**
   * When the notification was read
   */
  readAt?: string | null;
  /**
   * Optional URL for notification action (e.g., link to booking details)
   */
  actionUrl?: string | null;
  /**
   * Text for the action button (e.g., "View Booking", "Pay Now")
   */
  actionText?: string | null;
  /**
   * When the notification expires (optional)
   */
  expiresAt?: string | null;
  /**
   * Related booking (if this notification is about a booking)
   */
  relatedBooking?: (string | null) | Booking;
  /**
   * Related payment (if this notification is about a payment)
   */
  relatedPayment?: (string | null) | Payment;
  /**
   * Related support ticket (if this notification is about support)
   */
  relatedSupportTicket?: (string | null) | SupportTicket;
  /**
   * When the notification was created
   */
  createdAt: string;
  /**
   * When the notification was last updated
   */
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'properties';
        value: string | Property;
      } | null)
    | ({
        relationTo: 'rooms';
        value: string | Room;
      } | null)
    | ({
        relationTo: 'customers';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'visit-bookings';
        value: string | VisitBooking;
      } | null)
    | ({
        relationTo: 'bookings';
        value: string | Booking;
      } | null)
    | ({
        relationTo: 'payments';
        value: string | Payment;
      } | null)
    | ({
        relationTo: 'food-menu';
        value: string | FoodMenu;
      } | null)
    | ({
        relationTo: 'support-tickets';
        value: string | SupportTicket;
      } | null)
    | ({
        relationTo: 'support-media';
        value: string | SupportMedia;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'amenities';
        value: string | Amenity;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'customers';
        value: string | Customer;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'users';
        value: string | User;
      }
    | {
        relationTo: 'customers';
        value: string | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  property?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties_select".
 */
export interface PropertiesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  images?:
    | T
    | {
        image?: T;
        isCover?: T;
        id?: T;
      };
  preview?: T;
  description?: T;
  address?:
    | T
    | {
        address?: T;
        location?:
          | T
          | {
              state?: T;
              city?: T;
              sector?: T;
              coordinates?: T;
              mapLink?: T;
            };
      };
  propertyType?: T;
  genderType?: T;
  status?: T;
  featured?: T;
  amenities?: T;
  foodMenu?:
    | T
    | {
        menu?: T;
        price?: T;
      };
  nearbyLocations?:
    | T
    | {
        name?: T;
        distance?: T;
        id?: T;
      };
  manager?: T;
  securityDepositConfig?:
    | T
    | {
        enabled?: T;
        amount?: T;
        type?: T;
        multiplier?: T;
        refundable?: T;
        refundConditions?: T;
      };
  rooms?: T;
  roomRentPriceRange?:
    | T
    | {
        min?: T;
        max?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  deletedAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rooms_select".
 */
export interface RoomsSelect<T extends boolean = true> {
  name?: T;
  roomType?: T;
  rent?: T;
  amenities?: T;
  description?: T;
  status?: T;
  available?: T;
  images?:
    | T
    | {
        image?: T;
        isCover?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  name?: T;
  phone?: T;
  status?: T;
  profilePicture?: T;
  dateOfBirth?: T;
  gender?: T;
  occupation?: T;
  company?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        pincode?: T;
        country?: T;
      };
  emergencyContact?:
    | T
    | {
        name?: T;
        phone?: T;
        relationship?: T;
      };
  notificationPreferences?:
    | T
    | {
        emailNotifications?: T;
        smsNotifications?: T;
        pushNotifications?: T;
        bookingReminders?: T;
        paymentReminders?: T;
        maintenanceUpdates?: T;
      };
  autoPayEnabled?: T;
  autoPayPaymentMethod?: T;
  autoPayDay?: T;
  autoPayMaxAmount?: T;
  autoPayNotifications?: T;
  autoPayLastUpdated?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visit-bookings_select".
 */
export interface VisitBookingsSelect<T extends boolean = true> {
  customer?: T;
  guestUser?: T;
  property?: T;
  visitDate?: T;
  status?: T;
  notes?: T;
  statusHistory?:
    | T
    | {
        status?: T;
        changedBy?: T;
        changedAt?: T;
        note?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings_select".
 */
export interface BookingsSelect<T extends boolean = true> {
  customer?: T;
  property?: T;
  room?: T;
  foodIncluded?: T;
  price?: T;
  securityDeposit?:
    | T
    | {
        amount?: T;
        status?: T;
        paidDate?: T;
        refundedDate?: T;
        refundAmount?: T;
        notes?: T;
      };
  status?: T;
  roomSnapshot?: T;
  startDate?: T;
  endDate?: T;
  periodInMonths?: T;
  checkInDate?: T;
  checkOutDate?: T;
  cancellationReason?: T;
  cancelledAt?: T;
  cancelledBy?: T;
  extensionRequests?:
    | T
    | {
        requestedEndDate?: T;
        reason?: T;
        status?: T;
        requestedAt?: T;
        respondedAt?: T;
        responseNote?: T;
        id?: T;
      };
  maintenanceRequests?:
    | T
    | {
        title?: T;
        description?: T;
        priority?: T;
        status?: T;
        requestedAt?: T;
        resolvedAt?: T;
        resolutionNote?: T;
        id?: T;
      };
  bookingDocuments?:
    | T
    | {
        document?: T;
        type?: T;
        description?: T;
        uploadedAt?: T;
        id?: T;
      };
  rating?: T;
  review?: T;
  reviewedAt?: T;
  specialRequests?: T;
  notes?: T;
  totalNights?: T;
  averageDailyRate?: T;
  lastModified?: T;
  modificationCount?: T;
  customerSatisfactionScore?: T;
  bookingSource?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments_select".
 */
export interface PaymentsSelect<T extends boolean = true> {
  amount?: T;
  status?: T;
  customer?: T;
  payfor?: T;
  paymentForMonthAndYear?: T;
  paymentDate?: T;
  bookingSnapshot?: T;
  dueDate?: T;
  phonepeLastRaw?: T;
  gateway?: T;
  merchantOrderId?: T;
  phonepeLastCode?: T;
  phonepeLastState?: T;
  paymentMethod?: T;
  autoPayEnabled?: T;
  lateFees?: T;
  utilityCharges?: T;
  paymentReceipt?: T;
  paymentMethodDetails?:
    | T
    | {
        cardLast4?: T;
        cardType?: T;
        upiId?: T;
        bankName?: T;
      };
  reminderSettings?:
    | T
    | {
        sendReminders?: T;
        reminderDays?: T;
        reminderSentAt?: T;
      };
  notes?: T;
  processedBy?: T;
  processingTime?: T;
  retryCount?: T;
  lastRetryAt?: T;
  customerSatisfactionScore?: T;
  paymentSource?: T;
  deviceInfo?:
    | T
    | {
        userAgent?: T;
        ipAddress?: T;
        deviceType?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "food-menu_select".
 */
export interface FoodMenuSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-tickets_select".
 */
export interface SupportTicketsSelect<T extends boolean = true> {
  customer?: T;
  property?: T;
  staff?: T;
  type?: T;
  description?: T;
  status?: T;
  progress?:
    | T
    | {
        status?: T;
        updatedBy?: T;
        note?: T;
        updatedAt?: T;
        id?: T;
      };
  conversation?:
    | T
    | {
        sender?: T;
        message?: T;
        image?: T;
        createdAt?: T;
        id?: T;
      };
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-media_select".
 */
export interface SupportMediaSelect<T extends boolean = true> {
  alt?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  customer?: T;
  title?: T;
  message?: T;
  type?: T;
  category?: T;
  priority?: T;
  isRead?: T;
  readAt?: T;
  actionUrl?: T;
  actionText?: T;
  expiresAt?: T;
  relatedBooking?: T;
  relatedPayment?: T;
  relatedSupportTicket?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "amenities_select".
 */
export interface AmenitiesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  logo?: T;
  image?: T;
  status?: T;
  iconName?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'properties';
      value: string | Property;
    } | null;
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}